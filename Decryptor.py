#test file for esper cipher
#/home/hacker/challenge/challenge/test_file
import argparse
import os
import time
import sys
import string


fa = open("/challenge/ciphertext.txt", "rb")
content = fa.read()
fa.close()
#print(content)
cipherVal= b"S\xca\xdf\xf9\xd7\xdf\xdc\xf2\xea\x9f\xd4\xcf\xff\x90\xe7\xf6\xd2\xd9\xcf\xdf\x8c\xd7\xde\xc7\x9d\xe7\xf7\xc1\xc7\xf2\x9b\xc1\xf2\xb7\xe0\xf7\xf6\xd2\xd1\xf2\xab\xec\xd7\xfe\xe3\xec\xf2C\xf8\xf2\x8e\xef\x95\xa7\xd7\xc4\xbb\xcf\xdf\x81\xc3\xb7\x94\xbb\xda\xe2\xd4\xd3\xe3\xcc\xdf\xda\x9b\x99FN\xc4\xbb\xda\xd2\x99\xe7\xf3\xf8\xf2\xca\x9f\xd4\xaf\xc3\xa8\xf7\x86\xc3\x99\xf2\xdb\xd8\xf2\x82\xef\x9d\xa3\xab\xf1\xf2\xca\x9b\x85\xd7\xab\x90\xbf\xcf\x8f\xf1\xa3\xc7\xc1\xb3\xf2\x8f\xc1\xbb\xab\xc1\xa3\xf2\xd2\xd1\xff\xeb\xd4\xbf\x82\xd2\x85\xd3\xf3uZ\xea\xeb\xd1\xff\xeb\xd4\xbf\x82\xf7\xdd\xc3\xf3\xf1\xf2\xf2\x9b\xd4\xb3\xf3\x88\xeb\xf2\x9b\xe1\xf2\xe3\xcc\xa3\x82\xd2\x85\xd3\xe3\x90\xf2\x82\xc7\xc1\xc7\xe6\xe4\xc7\x8e\xef\x99\xbf\xc3\xc8\xc3\xda\xea\xd4S\xe3\xcc\xdf\xea\xeb\xc9\xc2\xe6\xf0\xd7\xe2\xc7\xd4\xf7\xaf\x90\xc2\xcf\xf3\xd1\xbfRi\xef\x86\xc7\xd1\xa3\xe6\x80\xe7\xf2\x93\xe5\xe7\xd6\xc1\xaf\xee\xef\xd4\xf7\xaf\xd4\xf2\x86\xc7\xd9\xcf\xfb\xf8\xd7\xa6\xc7\xc5\xf2\xff\xfc\xbb\xcf\x83\xf5\xe7\xc3\x88\xf2\x82\xff\xf1\xc3\xd7\x8c\xc2\xcf\xdb\x81\xa3\xe6\x9c\xd3\xf2\x9f\xc1\xf2\xe3\xc8\xd7\xfe\xf7\x85\xd7\xf3\x8cFg\xdf\xd1\xcb\xdf\xfc\xa3\xcf\xdb\xc1\xf2\xeb\xc4\xb3\x9e\x87\x9d\xe7\xf7\xc1\xcf\x86\xd2\x9d\xe7\xa7\x88\xcf\xde\x87\xd9\xe7\xf7\xf9\xf2j\xeb\xd4\xeb\xe3\xcc\xa3\xff\xd2\xd1\xf2\xab\xe4\xcb\xd2\xe3\xc1\xf2\xfb\x88\xe7\xca\x83\xd4\xd3\xe3\xcc\xdf\xda\x9b\xd4\xd7\xdf\xc1\xf7\xcf\x83\xc1\xf7\xd3uZ\xea\x9f\xd4\xfb\xf3\x90\xa3\xda\x9b\xd4\xa3\xc7\xc4\xcb\xcf\xd7\xd4\xd3\xb3\xf8\xe3\x86\xc7\xc5\xf2\xd3\xd4\xe3\xea\xef\xd9\xbb\xf3\xc1\xcf\xf6\xc7\x99\xc2\xe6\x8c\xd7\xfa\xf7\xe5\xf7\xaf\xc1\xa3\xf2\xd2\xd1\xbf\xe6\xf8\xcf\xf6\xc7\xd4\xcf\xff\xc1\xa3\xee\xc7\xd4\xb3\xe3\xe4\xcb\x9e\xf7\xed\xef\xabuZ\xd6\x9b\xe9\xc7\xe6\xc4\xf2\xee\x87\xed\xe3\xaf\xd4\xe3\xcf\xe7\xc1\xe3\xc3\xfc\xff\x86\xc7\xd4\xf7\xaf\x90\xd7\x82\x83\x99\xf2\xeb\xc4\xcb\xcf\xe7\xd1\xa3\xeb\xe0\xf2\xca\xd2\x95\xf7\xc3\xf8\xa3\xea\xeb\xc9\xf2\xff\x88\xcf\xfa\xd2\x8d\xf7\xdf\xc1o\xf2\xcf\xf5\xcaRiFg\x0b\x81\xc3\xdf\xd4\xbb\xca\xdb\xf1\xc3\xc3\x90\x97\xcf\xd7\xed\xf7\xd7\xa4\xbf\xea\x9f\xd4\xd7\xab\xc1\xa3\xee\xc7\xd4\xbf\xeb\xe4\xe7\xf6\xdf\xc1\xf2\xdb\xd8\xf2\xc2\xd7\x95\xa3\xb3\x88\xd7\xf6\xcf\xd4\xf7\xdf\xd0\xf2\x86\xc7\x95\xbb\xdb\xd0\xa7\xc2\xf7\xed\xef\xe6\x9c\xd3\xca\x83`Z\xab\xfc\xc7\xda\xd2\xf5\xf7\xeb\xec\xe7\x86\x9f\xd4\xe3\xdb\xf9\xf2\x16\x87\xe5\xcb\xf3\x88\xf7\xc6\xf7\xe5\xd7\xb7\xa4\xf2\xca\xeb\xd1\xc3\x83\x8c\xd7\x82\xd2\x99\xa3\xb3\xd0\xd7\xda\x9f\xd4\xd3\xdb\x9c\xf2\xf2\xeb\xc1\xf2\xeb\xc4\xcb\xcf\x9b\xc1\xf7\xab\xfc\xcb\xff\xd2\xf1\xcb\xe6\xc4Fg\x93\x9d\xd7\xdf\xcc\xd7\x8e\xe3\xc1\xe3\xe6\x9c\xf7\xaa\xe2\xd4\xf7\xef\xfc\xa7\x9e\xd2\xcd\xd7\xdf\xd0\xd7\xf6\xcf\xd4\xf7\xdf\xd0\xf2\xda\xb3\x95\xc3\xdb\xe4\xa3\xea\xeb\xc9\xf2\xbf\x94\xc3\xf6\xc7\x9d\xf7\xef\xe4\xc3\xea\x83\xf1\xe7\xab\xc1\xd7\xf6\xd2\xd1\xc3\xd7\xc1\xa3\xaa\x93\xc1\xbfRi\xcf\xd6\xd2\x99\xcf\xff\x90\xaf\xca\x9b\xc1\xf2\xdb\x88\xf2\xee\xd7\x9d\xe3\xbb\xc4\xbb\xda\xea\xd4{\x83\xc1\xe3\xda\x8b\xc1\xc3\xdb\x80\xd7\xf6\xcf\xd4\xf7\xd7\xdc\xcf\x86\xf7\x85\xd3\xd3\x8c\xf2\xca\xeb\xc5\xf2\xb7\xfc\xcf\xfe\x9f\xd4\xa3\xdb\xc1\xd3\xda\xe3\x95\xf2\xc7\x94\xc7\xca\xeb\x99FN\xe4\xe3\xda\xeb\x85\xd7\xff\xa4\xf2\xd6\xe3\xd1\xaf\xab\xc1\xd7\xf6\xd2\x99\xcf\xff\x90\xaf\xca\x9b\xc1\xc2\xe6\x88\xe7\x82\xc7\xd1\xbb\xeb\xe0\xe7\x86\x9f\xd4\xfa\xeb\xfc\xe3\xea\xcb\xb1\xfa\xe6\x90\xd3\xda\xd2\xf9\xcb\xdb\x9c\xc3\xda\xc3\xc9\xe7\xe6\x90\xd3\xca\x83\xd4\xd3\xe3\xcc\xdf\xda\x9b\x99FN\x94\xbf\xda\xe2\xd4\xd7\xdf\xc1\xf7\xf6\xd2\xe9\xbb\xfb\xc4\xcb\xea\xdf\xd4\xaf\xe3\xa4\xc2\xcf\x83\xe9\xf2\xe3\xf8\xf7\xfe\xb7\xbd\xe7\xe6\x8c\x97\x82\x83\xc1\xc7\xab\xc1\xf7\xf6\xc3\xd4\xeb\xc3\xf8\xe3\xcf\x83\xf5\xe7\xc3\x88\xf2\xd6\xe3\xd1\xaf\xab\xf9\xf2\x1e\xf3\xc1FN\x88\xe7\x82\x87\xe5\xa3\xc3\xf8\xef\xcf\x83\xe9\xcf\xd7\x8c\xf2\xc2\xd7\xed\xf2\xb7\xe0\xe7\xf6\xd2\xdd\xe7\xe6\x94\xbf\xda\xc3\xd4\xf7\xb7\xc1\xbf\xc2\xd7\xe5\xe7\xd6\xc1\xf7\xf6\xc3\xd4\xff\xdb\xf4\xb3\xf2\x9f\xc1\xe3\xe6\x90\xcf\xcf\xdf\x9d\xe7\xe3\x90\xe7\xcf\xeb\xc1\xafRi\xf7\xf6\xd7\xe5\x97\xab\xe4\xbf\xcf\x9f\xb1\xbf\xb7\xd4\xc7\x82\xea`ZRi#\xee\xf7\x99\xf2\xab\xcc\xd7\xda\xeb\x85\xd7\xff\xe4\xff\xcf\x93\x9d\xcf\xeb\xd4\xbf\x82\xd2\xf5\xf7\xab\xc1\xef\xda\xeb\xc1\xbb\xe3\x90\xe7\xde\xd2\xd1\xf2\xdf\x94\xc7\xc6\xc7\x9d\xf2\xdb\xd8\xf2\x9a\x9f\xc1\xeb\xb3\xf0\xf2\x9e\xef\xe9\xc3\xab\xf1\xf2\x82\x87\xd9\xd3\xe6\xc4\xbf{z\x99\xa3\xe3\x90\xd7\xc2\xd2\xd1\xcb\xe3\xf0\x97\x82\xf7\x99\xf2\xb7\xfc\xcf\xfe\x9f\xe4\xf2\xff\x94\x9b\xa6\xc7\x9d\xbf\xd6\xc1\xf7\xf6\xc3\xd4\xbf\x83\xf4\xfb\xf2\xe3\xf1\xff\xe6\xd4\x93\xda\xdf\x81\xa3\xc3\xfc\xcb\xcf\xcb\x9d\xf7\xd3\xd4\xaf\xf2\x9b\xf9\xbf\xde\xc1S\xf2\x8f\xc1\xab\xf3\x88\xc2{z\x85\xd3\xf3\x8c\xe7\xcf\x83\xe9\xcf\xd7\x8c\xf2\xc2\xef\xc5\xd7\xff\xa4\xf2\xf2\xeb\xe5\x97\xe6\xc4\xf2\x82\x87\xdd\xbf\xf3\x90\xf2\xf2\xcb\xd4\xa3\xc7\xd4\xf2\x82\xff\xf1\xc3\xd7\x8c\xf2\xf2\xcb\xd4\xf7\xe6\xe0\xf7\xc2\xff\xc1\xbb\xd6\xc1\xf7\xf6\xc3\xd4\xa3\xc7\xd4\x97\xcf\xd7\x9d\xe7Ri\xbf\x9e\xf7\xe5\xc3\xe6\x94\xbf\xda\xc3\xd4\xcf\xdf\xf0\x97\xcf\x83\xe9\xf2\xe3\x94\xef\xfa\xc7\xed\xa3\xe6\x90\xd3\xda\xd2\xd1\xfb\xc3\xf0\xd7\x9e\xf7\xc1\xbf\xe6\xfc\xeb\xcf\xf3\x81\xc7\xe3\xf8\xbf\xf7f|FN|\xcb\xda\xd2\xd1\xb3\xa7\x88\xcf\xca\xdf\xf5\xf2\xb7\xfc\xf2\x8e\x87\x99\xd3\xe6\x90\xd3\xda\xd2\xd9\xcf\xf7\xe4\xeb\xea\xdf\xd1\xa3\xc3\xfc\xcb\xcf\xef\xcd\xf2\xbb\xe0\xf7\x9e\xd2\xf5\xa7\xd3\xc4\xcb\xcf\xf3\xd1\xff\xcb\xd4\xbb\x82\xd2\xc5\xcf\xd6\xc1\xd7\x82\xd2\x85\xcf\xe6\x90\xf7\xe2\xc7`Z\xb7\xe0\xe7\xcf\xf3\xd1\xff\xcb\xd4\xbb\x82\xd2\xe9\xa7\xb7\xc1\xcf\xd6\xd2\x85\xd3\xf3\xc1\xe7\x8a\x87\xd1\xa3\xc3\xfc\xcb\xf7\xd2\x05\xd3\xc3\x8c\xf2\xea\x9f\xd4\xb3\xaf\xd4\xff\xea\x9f\xc1\xc3\x83\xc1\xaf\xee\xd7\x85\xf2\xb7\xe0\xe7\xcfCQ;'D\xf2B\xb7\xdd\xe7\xafuZR\x9b\xd1\xcb\xf7\xc1\x7f\xee\xd7\xe5\xc3\xf3\xf8\xef\xda\xd2\x89\xf7\xab\xc1\xbf\xda\x83\xd4\xcf\xb3\x90\xf2\x9e\xef\xd4\xe3\xdb\xf9"

keyVal=2

def rrot(n, d):
    return ((n >> d) | (n << (8 - d))) & 0xff

def decrypt(ciphertext, key):
    keyrotate= 2 #The keyrotate number provided
    keyxor= [ord(c) for c in key] # Convert key to XOR values
    plaintext= []
    
    for i in range(len(ciphertext)):
        # Reverse XOR and rotation to get the original plaintext
        rotated_value= ciphertext[i] ^ keyxor[i % len(keyxor)]
        original_value= rrot(rotated_value, keyrotate)
        plaintext.append(original_value)
    
    return bytes(plaintext)

key= "rORTrfA"  #The decryption key provided

decrypted_text= decrypt(cipherVal, key) #Decrypting the ciphertext

print(decrypted_text.decode('utf-8', errors='ignore')) 

val1= decrypted_text.decode('utf-8', errors='ignore')

val="""Hacking is often considered more than a skill. In popular culture, hackers
are seen as wizards of sorts, artists with powers to access the
inaccessible, or perform acts that seem impossible. Hacking, like art, has
great people, who are recognized for their skills, but whose abilities
cannot be captured or reproduced. In fact, a single great hacker in a team
is better than a hundred mediocre ones, similar to as none of the paintings
from a hundred mediocre artists can match a painting from van Gogh.

Vulnerability analysis is the science of capturing and reproducing what
some hackers do. Vulnerability analysis studies how one can reason, in a
principled way, about finding and exploiting vulnerabilities in all types
of software or hardware. By developing algorithms and tools to help humans
identify flaws in software, researchers "codify" the knowledge that hackers
use, in an organic way, to analyze systems and find their flaws. The
resulting tools can then be used at scale, and composed to create new
analysis systems.

This scientific process has generated a number of useful tools, such as
static analysis tools, fuzzers, and symbolic execution frameworks. However,
these tools codify only a subset of the skills of a hacker, and they are
still used only to augment the abilities of humans.

One approach to push the codification of what human hackers do, is to take
the hackers out of the equation. This is precisely what the DARPA Cyber
Grand Challenge was set out to do."""

writeFile= open("esper_plaintext.txt", "w")
writeFile.write(val1)
writeFile.close()